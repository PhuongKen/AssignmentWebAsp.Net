@model AssignmentWebASP.NET.Models.Customer

@{
    ViewBag.Title = "Register";
}

<div class="container" style="margin-top: 50px">
    <div class="register-page">
        <div class="register-form form">
            <div class="block-title">
                <h2 class="title"><span>Đăng kí tài khoản</span></h2>
            </div>
            @using (Html.BeginForm("Register", "Account", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <div class="form-group">
                    <label>Email</label>
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Mật khẩu</label>
                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Nhập lại mật khẩu</label>
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Tên</label>
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Số điện thoại</label>
                    @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Ngày sinh</label>
                    @Html.EditorFor(model => model.dateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.dateOfBirth, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Gender</label>
                    <select name="gender">
                        <option value="0">Mail</option>
                        <option value="1">Femail</option>
                        <option value="2">Other not say</option>
                    </select>
                    @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Địa chỉ</label>
                    @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                </div>

                <div class="form-group text-center">
                    <input type="submit" class="btn btn-primary" value="Đăng kí">
                    <input type="reset" class="btn btn-primary" value="Làm lại">
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-2">
                        <label class="label-success">@ViewBag.SuccessMessage</label>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-2">
                        <label class="label-danger">@ViewBag.DuplicateMessage</label>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
